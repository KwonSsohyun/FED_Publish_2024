- form 태그
   1. 사용자로부터 입력받은 데이터를 서버로 전송하는 태그
   2. 사용자로부터 입력받은 데이터를 폼데이터,필드라고 부른다.
   3. form태그는 자식요소로 <input>,<textarea>,<select>태그같은
      입력을 받기위한 태그들을 가진다.

   <form action="데이터를 처리할 서버의 주소" method="get,post">
   
- input태그
   1. 실질적으로 사용자에게 입력받는 태그
   2. form태그의 자식요소로 사용해야 input태그로 입력받은 데이터를 서버에 넘겨줄수있다.
   3. type속성의 속성값에 따라 입력받는 형식이 바뀐다.

   <input type="입력요소의 타입">

- type속성에 들어갈수 있는 속성값
1. text : 텍스트 형태로 사용자에게 입력받는다.
2. password : 사용자로부터 패스워드를 입력받는다.(입력한 데이터가 화면상에서 보이지 않는다)
3. date : 사용자로부터 년,월,일 형식의 날짜를 입력받는다.
4. submit : 전송버튼을 만든다.
5. reset : 초기화 버튼을 만든다.
6. file : 첨부파일 버튼을 만든다.(사용자로부터 파일을 입력받을때 사용)
7. hidden : 화면상에 보이지 않는 입력요소를 만든다.
       주로 name, value속성을 이용하여 개발자가 보내고싶은 데이터를 서버에 전송한다.

8. radio : 라디오 버튼을 만든다.
      여러 선택지중 하나만 선택할수 있는 박스를 만든다.

9. checkbox : 체크박스를 만든다.
   여러 선택지 중 여러개를 선택할수 있는 박스를 만든다.

- label 태그
   사용자가 입력하는 input태그에 대한 설명이다.
   for속성을 사용하여 input태그의 id 속성값과 매칭시켜준다.

- fieldset, legend 태그
   1. fieldset : 여러 label들을 묶어줄 때 사용한다.
   2. legend : fieldset태그의 설명(제목)을 설정한다.

- input태그의 주요 속성
   1. autofocus
      페이지 진입 시 해당 input요소를 자동으로 focus해준다.

   2. readonly
      입력요소를 읽기전용 필드로 만들어준다.
      사용자가 입력요소에 입력할수 없다.

   3. disabled
      입력요소를 비활성화 시키는 속성
      value값을 서버에 전달하지도 않는다.

   4. placeholder
      input요소의 설명(힌트)을 작성한다.

   5. required
      해당 입력요소를 필수 입력요소로 설정한다.
      
   6. value
      해당 입력요소가 가지는 실질적인 입력데이터를 속성값으로 가진다.
   
   7. name
      서버쪽에 데이터를 보낼때 데이터에 이름을 붙혀주는 속성

- textarea 태그
   텍스트를 여러줄 입력받을때 사용하는 태그
   
   <textarea cols="가로너비" rows="세로높이"> </textarea>

   ** value속성값이 컨텐츠이다.

- select,option 태그
   여러 옵션 중 하나를 선택하는 드롭다운 목록을 만드는 태그
   
   <select name="전달할 데이터 이름">
      <option value="내용1을 선택했을때 서버에 전달할 데이터">내용1 </option>
      <option value="내용2를 선택했을때 .. ">내용2 </option>
   </select>

   ** option 태그에 value속성을 지정하면 그 속성값이 실질적으로 서버에 넘어가는 데이터

- button 태그
   버튼을 만드는 태그
   <button type="submit , reset , button">

   ** button 속성값 : 아무런 기능이 없는 버튼을 만든다. <= 주로 javaScript와 함께 사용

- 반응형 웹
   사용자의 화면크기(뷰포트)에 맞춰서 반응하는 웹페이지
   보여지는 화면의 크기에 따라 요소를 재배치하고 다시 표현하는것

- viewport(뷰포트)
   사용자의 기기에서 실제 내용이 표시되는 화면 영역이다.
   pc와 모바일의 뷰포트는 크기가 다르기 때문에 그에맞는 반응형 웹을 맞춰서 보여줘야한다.

- 뷰포트 단위
   1. vw(view width) : 뷰포트 너비의 퍼센트
      100vw => 뷰포트 너비의 100퍼센트를 의미한다.

   2. vh(view height) : 뷰포트 높이의 퍼센트
      20vh => 뷰포트 높이의 20퍼센트를 의미한다.

- 미디어 쿼리(media query)
   1. 반응형 웹을 만들기 위한 가장 기본적인 방법이다.
      사용자의 뷰포트 크기에따라 다른 CSS를 적용해서 요소의 배치를 바꿔줄수 있다.

   2. @media속성을 사용하여 특정 뷰포트(조건) 어떤 CSS를 적용시킬지 설정할수 있다.

- 미디어쿼리 구조
@media 미디어유형 (조건) and (조건){
   선택자{
      속성명 : 속성값;
      ,..
   }
}   


1. 미디어 유형 : all 또는 screen 속성값을 사용한다.
      all : 어떤 디바이스 유형이든 다 적용하겠다.(기본값)
      screen : pc와 모바일 유형만 적용하겠다.
      
      ** 미디어 유형은 주로 생략한다.

2. (조건) : css를 적용할 조건을 설정할수 있다.
      ex) (max-width : 500px) <= 가로너비가 500px보다 작을때 css를 적용하겠다.

3. and : 여러 조건을 묶어주고싶을때 사용한다.









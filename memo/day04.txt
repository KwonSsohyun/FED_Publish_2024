- 내부 스타일
   <head>영역에 <style>태그를 이용해서 각 요소의 스타일을 정의해줄수 있다.

<head>
   <style>
      선택자{
      속성명 : 속성값;
      ...
      }      
   </style>
</head>

선택자(selector) : css에서 html의 어떤 요소에 스타일을 입힐지 선택하기위해 사용하는것

- id속성과 class속성
id와 class속성을 사용하여 특정 태그들을 식별하고 그룹화 할수 있다.

- id속성
특정 태그에 식별이가능한 고유한값을 지정한다.
<태그명 id="id명"> 
css에서 선택자로 사용할때는 #id명으로 사용한다.
** id속성은 하나의 태그에 여러개 줄수없다.

** 각기 다른 태그에 중복되는 id속성을 지정해도 오류는 나지 않는다.
   단, id속성의 사용목적에 맞지 않는다.

- class 속성
여러 태그를 하나의 집단으로 묶어준다.
<태그명 class="클래스명">
css에서 선택자로 선택할 때는 .class명으로 선택해준다.

** 하나의 태그가 id와 class속성을 동시에 가질 수 있으며 class속성을 여러개 가질 수도 있다.
css를 입힐때는 주로 class속성을 사용하며
id속성은 그 웹페이지에서 중요하고 유일한 요소에 부여한다.

- 외부 스타일
   별도의 css파일을 만들어 css를 따로 관리한다.
   css파일과 html파일을 완전 분리하여 관리하기 때문에 가독성과 유지보수에 좋다.

   <head>영역안에 <link>태그를 사용하여 css파일과 html파일을 연동해준다.

- css파일 연동 방법
<head>
   <link rel="stylesheet" href="css파일의 경로"/>
</head>

- 박스 모델(Box Model)
   HTML의 모든 요소는 일정한 영역을 직사각형 모양으로 차지한다.
   css에서는 이런 영역들을 Box Model이라고 한다.

- 박스모델의 구성
   margin : 바깥 여백
   border : 테두리
   padding : 안쪽 여백
   content : 컨텐츠의 영역

** 인라인 요소도 박스모델로 margin,border,padding,contents 설정이 가능하다.
   가로,세로 크기는 지정할 수 없다.

** 박스모델 css속성

1. contents : width,height
   - 단위는 기본적으로 px단위이며 그외에도 여러가지 단위가 있다.
   
2. border 
   border : 굵기 형태 색상

   - 테두리선의 형태
   1. solid : 실선
   2. dotted : 점선
   3. dashed : 긴 점선

3. padding
    padding : 4방향
   padding : 상하 좌우
   padding : 상 좌우 하
   padding : 상 우 하 좌

4. margin
   ** auto속성값을 사용하면 요소를 좌우 중앙에 정렬한다.(부모 요소의 크기를 기준)
   ** 블록요소를 여러개 배치하게 되면 margin값이 겹친다.
   ** 인라인 요소에 margin값을 주게되면 위아래는 안먹는다. 
           line-height를 사용한다.

- display 속성
   display속성은 HTML에서 요소를 어떻게 표시할지를 결정한다.
   HTML의 모든 요소들은 기본적인 display 속성값을 가지고 있다.
   
    display : block => 요소를 블록요소로 표현하겠다.
   display : inline => 요소를 인라인요소로 표현하겠다.

- display속성의 기본 4가지 값
   1. block 

   2. inline

   3. inline-block : 요소의 속성을 인라인 블록요소로 표현한다.
      인라인 블록요소는 인라인과 블록요소의 속성을 합친것.
      컨텐츠의 크기만큼만 영역을 차지하며 가로,세로 크기를 지정할 수 있다.
   
   4. none : 요소를 보이지 않게 설정한다.
      단순히 요소를 투명하게 만드는게 아니라 아예 사라지게 만든다.
      공간도 차지하지 않게 만든다.




- flex-box
	웹페이지의 레이아웃을 설정할때 유연하게 설정할 수 있게 해주는 속성

- 레이아웃을 만들 때 사용하는 CSS속성
1. float
	- 오래되서 안정성이 좋지 못하다.
	- 반응형 웹페이지를 만들때 float 사용하면 굉장히 불편하다.

2. display의 flex-box
	- css3부터 레이아웃을 잡기 편하도록 제공되는 방식이다.

3. grid
	- 최근에 주목받고 있으며 브라우저 버전에 따라 지원이 안되는 브라우저도 존재한다.

- flexbox
	레이아웃을 만드는 하나의 방식이다.
	복잡하지 않고 유연하게 요소들의 크기와 순서를 정하여 배치할 수 있다.

- flex box 구성
	1. flex container
		레이아웃을 적용하여 배치하려는 요소들을 감싸고 있는 부모 요소

	2. flex item
		실질적으로 배치하고 싶은 요소를 의미하며 flex-container의 자식요소이다.
		하나의 flex container 여러개의 flex item을 가질 수 있다.

	3. main axis(주축 - 세로)
		자식요소가 기본적으로 배치되는 방향

	4. cross axis(교차축 - 가로)


- flex-container를 만드는 방법
	flex-container로 사용할 요소에 display: flex 속성을 지정한다.


- flex-container의 주요 속성
	배치하려는 요소들의 전체흐름, 정렬과 관련된 속성

1. display : flex
	flex container의 배치 속성을 flex-box로 설정하는 속성

2. flex-direction : 주축의 방향을 지정하는 속성
	row : 가로방향 (기본값)
	column : 세로방향

3. justify-content 속성
	컨테이너의 주축을 기준으로 아이템들을 정렬하는 속성
	1. center : 주축을 기준으로 중앙 정렬
	2. space-between : 첫 아이템과 마지막 아이템을 컨테이너 영역의 양 끝에 배치하고
				나머지 아이템들을 동일한 간격으로 정렬
	3. space-around : 모든 아이템을 동일한 간격으로 정렬한다.

4. align-items 속성
	컨테이너의 교차축을 기준으로 정렬하는 속성
	justify-content 속성이랑 속성값은 똑같다.

	1. center
	2. space-between
	3. space-around

- flex-wrap 속성
	컨테이너 내부의 요소들이 많거나 크기가 커서 컨테이너를 넘어가게 됬을때
	한줄로 보여줄 것인지 여러줄로 보여줄 것인지 결정하는 속성
	
	1. nowrap : flex-wrap 속성의 기본값으로 줄바꿈을 하지않고 요소를 한줄로 보여준다.
			만약 컨테이너의 크기가 작다면 각각 아이템의 크기가 줄어든다.

	2. wrap : 컨테이너의 크기가 작다면 자동으로 줄바꿈해서 여러줄로 보여준다.

- 레이아웃의 기본구조
	헤더 : 해당 기업의 로고나 검색바, 편의성을 위한 메뉴바(네비게이션 바) 등등을 가지고 있는 영역
	메인(섹션) : 하나의 독립적인 구역(메인 내용)
	푸터 : 해당 기업의 정보나 고객센터 등등 여러가지 데이터를 담고있는 영역
		웹페이지의 신뢰성을 위해 작성한다.


- div나 span태그는 시맨틱하지 않는 태그다 (의미가 없는 태그다.)

- 시멘틱 태그(Semantic Tag)
	태그 자체적으로 의미가 있는 태그들
	* 기능은 없지만 의미가 부여된 div태그들

- 시멘틱 태그의 종류
1. <header> : 페이지의 헤더영역을 의미하는 태그, 페이지의 최상단에 위치한다.
2. <footer> : 회사 정보 등등 어떠한 정보를 가지고 있는 영역, 페이지의 최하단에 위치한다.
3. <nav> : 다른 페이지로 이동하는 네비게이션(카테고리) 요소를 담은 영역
4. <main> : 주 컨텐츠가 들어가는 영역
5. <aside> : 주 컨텐츠 내용과는 연관성이 낮은 분리된 영역, 주로 사이드바로 사용한다.
6. <section> : 메인 안에서 컨텐츠를 나눌때 사용하는 영역
7. <article> : 독립적으로 반복되는 컨텐츠를 가진 영역






























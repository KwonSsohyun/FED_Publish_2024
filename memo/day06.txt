- position
   HTML의 요소들을 좀 더 자유롭게 배치할 수 있는 속성

- position 속성의 속성값
   1. static(기본값)
      HTML의 요소가 일반적인 흐름으로 배치되는 속성

   2. relative
      static과 동일하게 요소가 일반적인 흐름으로 배치되며
      현재 자신의 위치를 기준으로 배치를 좀 더 자유롭게 할 수있는
      top,right,left,bottom 속성들을 사용할 수 있다.

   3. absolute
      일반적인 흐름과 무관하게 요소를 배치할 수 있다.
      마찬가지로 top,right,left,bottom을 사용할수 있다.
      position: static이 아닌 부모요소를 기준으로 배치된다.
      static이 아닌 부모요소가 없다면 body태그를 기준으로 배치된다.

   4. fixed 
      브라우저 화면상에서 보이는영역에 고정되도록 만든다.
      마찬가지로 top,right,left,bottom을 사용할수 있다.
      스크롤을 내려서 보여지는 화면이 달라져도 fixed로 설정한 요소는 
      절대적인 위치에 고정된다.
      
   5. sticky 
      처음에는 일반적인 흐름으로 배치되다가 스크롤이 일정위치에 도달하게 되면
      fixed처럼 절대적인 위치에 고정된다.
   
      top속성만 사용이 가능한데 스크롤이 일정위치에 도달했을때
      상단으로부터 얼마나 띄워줄건지를 결정한다.

      ** 주의할점 : 반드시 바로 위 부모요소에 height속성값이 설정되있어야한다.

- z-index 속성
   요소가 배치될때 겹친다면 어떤 요소가 위로 올라올지 결정해주는 속성
   z-index속성값으로 지정해주는 숫자가 높을수록 해당요소가 위로 올라와서 보여진다.

   ** 주의사항 : position이 static이 아닌 요소에만 적용할 수 있다.





- 고급 선택자
1. 연결 선택자
	1. 하위 선택자
		상위요소 하위요소 {
			상위요소를 포함한 모든 하위 요소를 선택한다.
			자식요소를 포함한 모든 자손 요소가 선택된다.
		}

	2. 자식 선택자
		부모요소 > 자식요소 {
			부모요소 바로 아래에 속한 자식요소를 선택한다.			
		}

	3. 인접형제 선택자
		요소1 + 요소2 {
			요소1을 기준으로 바로 다음 형제 요소를 선택한다.
		}

	4. 형제 선택자
		요소1 ~ 요소2 {
			요소1을 기준으로 다음에 오는 모든 형제요소를 선택한다.
		}


2. 속성 선택자
	속성이나 속성값까지 지정해서 요소를 선택할 수 있다.
	
	선택자[속성명]
	선택자[속성명 = "속성값"]




3. 가상 선택자
	1. 가상 클래스 선택자
		선택자:가상클래스{
			실제 존재하는 요소의 특정 상태에 따라 css를 주고싶을 때 사용한다.
		}
		
		- 가상클래스 종류
			1. link : href속성을 가진 태그 중 아직 해당 링크를 방문하지 않은 상태
			2. visited : href속성을 가진 태그 중 이미 방문한 상태
			3. hover : 사용자가 해당 요소에 마우스 커서를 올린 상태
			4. focus : 사용자가 입력 가능한 칸을 선택한 상태
			5. nth-child : 형제 태그 중에 순서를 지정해서 선택
			6. not(선택자) : 소괄호()안에 작성한 선택자를 제외한 모든 선택자를 선택


	2. 가상 요소 선택자
		선택자::가상요소{
			요소의 "특정부분"에 원하는 스타일을 지정하거나 새로운 요소를 삽입하기 위해서 사용한다.
		}

		- 가상 요소 종류
			1. first-letter : 요소의 텍스트 중 첫 글자만 선택(블록요소에만 사용가능)
			2. first-line : 요소의 내용 중 첫 줄만 선택(블록요소에만 사용가능)
			3. before : 선택한 요소의 컨텐츠 앞에 다른 요소를 삽입
			4. after : 선택한 요소의 컨텐츠 뒤에 다른 요소를 삽입




- transform, transition

	- ● transform
		HTML요소의 크기 조절, 요소 이동, 요소를 회전 효과를 나타낼 때 사용한다.
		transform() 함수를 사용한다.

		** 주의사항 : 요소의 display속성이 block 또는 inline-block

	- transform 관련 함수 종류
		1. translate(x,y)
			소괄호 안에 넘겨준 x(가로축), y(세로축) 만큼 이동시킨다.

		2. translateX(x)
			소괄호 안에 넘겨준 x(가로축)만큼 요소를 이동시킨다.

		3. translateY(y)
			소괄호 안에 넘겨준 y(세로축)만큼 요소를 이동시킨다.

		4. scale(x,y)
			배수단위로 넘겨준다.
			소괄호 안에 넘겨준 x,y만큼 요소를 확대한다.

		5. scaleX(x)
			소괄호 안에 넘겨준 x만큼 요소를 확대한다.

		6. scaleY(y)
			소괄호 안에 넘겨준 y만큼 요소를 확대한다.

		7. rotate(각도deg)
			넘겨준 각도만큼 요소를 회전시킨다.



	- ● transition (요소에 호버를 주거나 뭔가 이벤트 후에 적용하는 모션임)
		transform 속성은 단순히 요소의 변형만을 수행한다.
		transition 속성은 요소를 변형할 때 시간을 설정해서 마치 하나의 애니메이션처럼 표현해줄 수 있다.
		transform 속성과 달리 요소를 완전히 다른 스타일로 변경할 수도 있다.

	- transition의 속성
		1. transition-property
			트랜지션을 적용할 요소의 속성을 설정해준다.

			- 속성값
			  all : 해당 요소의 모든 속성에 트랜지션을 적용하겠다.
			  none : 아무 속성에도 트랜지션을 적용하지 않겠다.
			  속성명 : 특정 속성을 선택하여 트랜지션을 적용하겠다.

		2. transition-duration : 시간s;
			트랜지션의 진행시간을 설정한다.

		3. transition-timing-function
			트랜지션의 진행속도를 설정한다.
			
			- 속성값
			  ease : 천천히 → 점점빨리 → 천천히 (기본값)
			  linear : 시작부터 끝까지 같은 속도
			  ease-in : 느리게 시작
			  ease-out : 느리게 종료
			  ease-in-out : 느리게 시작해서 느리게 끝내겠다.

		4. transition-delay : 시간s;
			트랜지션을 바로 실행하지 않고 지연시간을 설정한다.

		5. transition : property duration timing-function delay
			- property에 all 주면 다 적용됨!
			위에 있는 모든 트랜지션 관련 속성을 하나로 간편하게 설정할 수 있다.


- animation
	CSS로 애니메이션 효과를 만들기 위한 속성
	transition 속성보다 좀 더 쉽고 상세하게 애니메이션 효과를 설정할 수 있다.


	- keyframes
		animation속성은 특정 지점에서 요소의 스타일을 바꿀 수 있는데 
		그 지점을 keyframes라고 한다.

		keyframes(애니메이션의 특정지점)을 미리 만들어두고
		적용시키고 싶은 요소에 다양한 속성으로 애니메이션을 적용시킨다.


	- keyframes의 속성
		@keyframes 키프레임의 이름{
			선택자{
				스타일
			}
		}

		- from, to, percent선택자를 선택자로 사용한다.


	- animation 관련 속성
		1. animation-name : 키프레임의 이름;
			적용시키고싶은 요소에 애니메이션 효과를 지정한다.
			미리 만들어준 키프레임 이름을 사용한다.

		2. animation-duration : 시간s;
			애니메이션이 진행되는 실행시간을 설정한다.

		3. animation-iteration-count : 반복횟수, infinite(무한반복)
			애니메이션의 반복횟수를 지정하는 속성
			속성값을 infinite로 주면 무한히 반복하겠다는 의미

		4. animation-delay : 시간s;
			애니메이션의 시작시간을 설정한다.




- form 태그
	웹 문서상에서 입력받은 데이터들을 서버로 보내주는 태그



















// ▶ 콜백함수(Callback)

// ▶ 함수 선언
function mul(num1, num2, callback){ // callback 매개변수는 매개변수로 어떠한 기능(함수)을 받아온다.
    // mul함수가 받아온 매개변수 num1, num2값을 그대로 콜백함수를 호출하며 인자값으로 넘겨준다.
    callback(num1 * num2);  // 콜백함수 호출
}

// ---------------------------------------------------------------
// → 콜백함수 부분에 넘겨줄 함수 정의 (선언적 함수 사용 - 기본 원리 설명)
//   콜백함수 선언
function print(result){     // 매개변수로 result값을 받아와서
    console.log(result);    // 콘솔창에 result값 출력
}

mul(10,20,print);   // 200


// ---------------------------------------------------------------
// ★ 주로 익명함수로 만들어서 넘겨준다. (실 사용)
//    콜백함수 선언 → function(result){  console.log("(익명함수) " + result); }
mul(20,40, function(result){    // result 매개변수 값 ▶ callback함수 실행한 callback(num1 * num2);의 결과값을 받아온다.
    console.log("(익명함수) " + result);        // [실행 결과] 800
});

// ---------------------------------------------------------------
// ★ 화살표 함수로 익명함수 정의 (실 사용)
mul(30,50, result => console.log("(화살표함수) " + result));  // [실행 결과] 1500



// ---------------------------------------------------------------
// ▶ 두 정수의 덧셈을 구한 뒤, 결과에 10을 다시 더해서 출력
// 1) 함수 선언
function add(num1, num2, callback){
    callback(num1 + num2);
}

// 2) 함수 호출
add(10,20, function(num){
    // → 구현부
    //   ㄴ매개변수로 받아온 숫자에 10을 더해서 출력한다.
    console.log(num + 10);  // [실행 결과] 40
});